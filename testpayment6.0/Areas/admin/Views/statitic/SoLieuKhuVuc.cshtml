@model testpayment6._0.Areas.admin.Models.RegionRevenueViewModel

@{
    ViewData["Title"] = "Doanh thu theo khu vực";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="fas fa-chart-pie me-2"></i>
                    Báo cáo doanh thu theo khu vực
                </h2>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" action="@Url.Action("SoLieuLoaiMonAn", "statitic")">
                        <div class="row align-items-end">

                            <div class="col-md-2">
                                <label class="form-label">Từ ngày</label>
                                <input type="date" name="startDate" class="form-control"
                                       value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Đến ngày</label>
                                <input type="date" name="endDate" class="form-control"
                                       value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
                            </div>

                            <div class="col-md-2">
                                <label class="form-label">Lọc nhanh</label>
                                <select id="quickDateFilter" class="form-select">
                                    <option value="">Chọn khoảng thời gian</option>
                                    <option value="today">Hôm nay</option>
                                    <option value="yesterday">Hôm qua</option>
                                    <option value="thisWeek">Tuần này</option>
                                    <option value="lastWeek">Tuần trước</option>
                                    <option value="thisMonth">Tháng này</option>
                                    <option value="lastMonth">Tháng trước</option>
                                    <option value="thisYear">Năm Nay</option>
                                    <option value="lastYear">Năm trước</option>
                                </select>
                            </div>

                            <div class="col-md-6">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="fas fa-filter me-1"></i>
                                    Lọc
                                </button>
                                <a href="@Url.Action("SoLieuLoaiMonAn", "statitic")" class="btn btn-outline-secondary me-2">
                                    <i class="fas fa-times me-1"></i>
                                    Xóa bộ lọc
                                </a>
                                <button type="button" class="btn btn-success" onclick="exportData()">
                                    <i class="fas fa-download me-1"></i>
                                    Xuất Excel
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (ViewBag.ErrorMessageSLKV != null)
            {
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    @ViewBag.ErrorMessageSLKV
                </div>
            }

            @* <div class="mb-3 d-flex justify-content-between align-items-center">
                <div>
                    <small class="text-muted">
                        Tìm thấy <strong>@Model.RegionRevenue.Count</strong> danh mục

                        @if (Model.StartDate.HasValue || Model.EndDate.HasValue)
                        {
                            <span class="badge bg-info ms-2">
                                @if (Model.StartDate.HasValue && Model.EndDate.HasValue)
                                {
                                    <span>@Model.StartDate.Value.ToString("dd/MM/yyyy") - @Model.EndDate.Value.ToString("dd/MM/yyyy")</span>
                                }
                                else if (Model.StartDate.HasValue)
                                {
                                    <span>Từ @Model.StartDate.Value.ToString("dd/MM/yyyy")</span>
                                }
                                else if (Model.EndDate.HasValue)
                                {
                                    <span>Đến @Model.EndDate.Value.ToString("dd/MM/yyyy")</span>
                                }
                            </span>
                        }
                    </small>
                </div>
                <div>
                    <h5 class="text-primary mb-0">
                        Tổng doanh thu: <strong>@Model.RegionRevenue.Sum(x => x.TotalRevenue).ToString("N0") VNĐ</strong>
                    </h5>
                </div>
            </div>

            <div class="row mb-4">
                @foreach (var region in Model.RegionRevenue.Take(10))
                {
                    <div class="col-md-3 mb-3">
                        <div class="card text-white bg-primary">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h6 class="card-title">@region.regionName</h6>
                                        <h4 class="mb-0">@region.TotalRevenue.ToString("N0") VNĐ</h4>
                                        <small>@region.TotalQuantitySold món đã bán</small>
                                    </div>
                                    <div class="align-self-center">
                                        <i class="fas fa-utensils fa-2x opacity-75"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div> *@

            <div class="card">
                <div class="card-body">
                    @if (Model.RegionRevenue.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Số thứ tự</th>
                                        <th>Mã khu vực</th>
                                        <th>Tên khu vực</th>
                                        <th>Số món ăn</th>
                                        <th>SL đã bán</th>
                                        <th>Doanh thu</th>
                                        <th>Số đơn hàng</th>
                                        <th>Tỷ lệ doanh thu</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int index = 1;
                                        decimal totalRevenue = Model.RegionRevenue.Sum(x => x.TotalRevenue);
                                    }
                                    @foreach (var region in Model.RegionRevenue)
                                    {
                                        var revenuePercentage = totalRevenue > 0 ? (region.TotalRevenue / totalRevenue * 100) : 0;
                                        <tr>
                                            <td>@index</td>
                                            <td>
                                                <strong>@region.regionId</strong>
                                            </td>
                                            <td>
                                                <strong>@region.regionName</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-info fs-6">@region.DishCount món</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-warning fs-6">@region.TotalQuantitySold</span>
                                            </td>
                                            <td>
                                                <strong class="text-success">@region.TotalRevenue.ToString("N0") VNĐ</strong>
                                            </td>
                                            <td>
                                                <span class="text-muted">@region.OrderCount đơn</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="progress flex-grow-1 me-2" style="height: 20px;">
                                                        <div class="progress-bar bg-success" role="progressbar"
                                                             style="width: @revenuePercentage.ToString("F1")%"
                                                             aria-valuenow="@revenuePercentage.ToString("F1")"
                                                             aria-valuemin="0" aria-valuemax="100">
                                                        </div>
                                                    </div>
                                                    <small class="text-muted">@revenuePercentage.ToString("F1")%</small>
                                                </div>
                                            </td>
                                        </tr>
                                        index++;
                                    }
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <td colspan="3"><strong>TỔNG CỘNG</strong></td>
                                        <td><strong class="text-info">@Model.RegionRevenue.Sum(x => x.DishCount) món</strong></td>
                                        <td><strong class="text-warning">@Model.RegionRevenue.Sum(x => x.TotalQuantitySold)</strong></td>
                                        <td><strong class="text-success">@Model.RegionRevenue.Sum(x => x.TotalRevenue).ToString("N0") VNĐ</strong></td>
                                        <td><strong class="text-muted">@Model.RegionRevenue.Sum(x => x.OrderCount) đơn</strong></td>
                                        <td><strong>100%</strong></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    } 
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-chart-pie fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không có dữ liệu doanh thu theo danh mục</h5>
                            <p class="text-muted">
                                @if (Model.StartDate.HasValue || Model.EndDate.HasValue)
                                {
                                    <span>Thử thay đổi bộ lọc để xem thêm kết quả</span>
                                }
                                else
                                {
                                    <span>Chưa có dữ liệu doanh thu nào</span>
                                }
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap Icons CDN -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<style>
    .table th {
        font-weight: 600;
        font-size: 0.9rem;
    }

    .table td {
        vertical-align: middle;
    }

    .badge {
        font-size: 0.8rem;
    }

    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
    }

    .btn {
        font-size: 0.9rem;
    }

    .form-select, .form-control {
        font-size: 0.9rem;
    }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .table tfoot {
        border-top: 2px solid #dee2e6;
    }

    .bg-primary.card {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%) !important;
    }

    .progress {
        background-color: #e9ecef;
    }

    .progress-bar {
        transition: width 0.6s ease;
    }
</style>

<script>
    document.getElementById('quickDateFilter').addEventListener('change', function() {
        const value = this.value;
        const startDateInput = document.querySelector('input[name="startDate"]');
        const endDateInput = document.querySelector('input[name="endDate"]');

        if (!value) return;

        const today = new Date();
        let startDate, endDate;

        switch(value) {
            case 'today':
                startDate = endDate = today;
                break;
            case 'yesterday':
                startDate = endDate = new Date(today.getTime() - 24 * 60 * 60 * 1000);
                break;
            case 'thisWeek':
                const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));
                startDate = startOfWeek;
                endDate = new Date();
                break;
            case 'lastWeek':
                const lastWeekStart = new Date(today.setDate(today.getDate() - today.getDay() - 7));
                const lastWeekEnd = new Date(today.setDate(today.getDate() - today.getDay() - 1));
                startDate = lastWeekStart;
                endDate = lastWeekEnd;
                break;
            case 'thisMonth':
                startDate = new Date(today.getFullYear(), today.getMonth(), 1);
                endDate = new Date();
                break;
            case 'lastMonth':
                startDate = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                endDate = new Date(today.getFullYear(), today.getMonth(), 0);
                break;
            case 'thisYear':
                startDate = new Date(today.getFullYear(), 0, 1);
                endDate = new Date();
                break;
            case 'lastYear':
                startDate = new Date(today.getFullYear() - 1, 0, 1);
                endDate = new Date(today.getFullYear() - 1, 11, 31);
                break;
        }

        if (startDate && endDate) {
            startDateInput.value = startDate.toISOString().split('T')[0];
            endDateInput.value = endDate.toISOString().split('T')[0];
        }
    });

    // function exportData() {
    //     const form = document.querySelector('form');
    //     const formData = new FormData(form);
    //     const params = new URLSearchParams(formData);

    //     alert('Chức năng xuất Excel sẽ được implement sau');
    // }
</script>