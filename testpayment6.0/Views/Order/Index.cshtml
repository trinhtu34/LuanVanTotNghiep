@model testpayment6._0.ResponseModels.OrderListViewModel

@{
    ViewData["Title"] = "Danh sách đơn hàng";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-shopping-cart"></i> Danh sách đơn hàng của @Model.UserId</h2>
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                    <i class="fas fa-home"></i> Về trang chủ
                </a>
            </div>

            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                <div class="alert alert-danger" role="alert">
                    <i class="fas fa-exclamation-triangle"></i> @ViewBag.Error
                </div>
            }

            @if (Model.Orders != null && Model.Orders.Any())
            {
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card statistics-card">
                            <div class="card-header">
                                <h5><i class="fas fa-chart-pie"></i> Thống Kê Tổng Quan</h5>
                            </div>
                            <div class="card-body">
                                <div class="row text-center">
                                    <div class="col-md-2 col-sm-6">
                                        <div class="stat-item total">
                                            <div class="stat-value">@Model.Statistics.TotalOrders</div>
                                            <div class="stat-label">
                                                <i class="fas fa-clipboard-list text-primary"></i>
                                                Tổng Đơn Hàng
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-6">
                                        <div class="stat-item paid">
                                            <div class="stat-value">@Model.Statistics.PaidOrders</div>
                                            <div class="stat-label">
                                                <i class="fas fa-check-circle text-success"></i>
                                                Đã Thanh Toán
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-6">
                                        <div class="stat-item unpaid">
                                            <div class="stat-value">@Model.Statistics.UnpaidOrders</div>
                                            <div class="stat-label">
                                                <i class="fas fa-exclamation-circle text-warning"></i>
                                                Chưa Thanh Toán
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-6">
                                        <div class="stat-item money">
                                            <div class="stat-value">@Model.Statistics.TotalAmount.ToString("N0")</div>
                                            <div class="stat-label">
                                                <i class="fas fa-money-bill-wave text-info"></i>
                                                Tổng Tiền (VNĐ)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-6">
                                        <div class="stat-item paid-money">
                                            <div class="stat-value">@Model.Statistics.PaidAmount.ToString("N0")</div>
                                            <div class="stat-label">
                                                <i class="fas fa-dollar-sign text-success"></i>
                                                Tiền Đã Thu (VNĐ)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-6">
                                        <div class="stat-item unpaid-money">
                                            <div class="stat-value">@Model.Statistics.UnpaidAmount.ToString("N0")</div>
                                            <div class="stat-label">
                                                <i class="fas fa-hourglass-half text-warning"></i>
                                                Tiền Chưa Thu (VNĐ)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    @foreach (var order in Model.Orders.OrderByDescending(o => o.OrderTime))
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100 shadow-sm">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="card-title mb-0">
                                        <i class="fas fa-receipt"></i> Đơn hàng #@order.CartId
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <strong><i class="fas fa-calendar-alt"></i> Thời gian đặt:</strong><br>
                                        <span class="text-muted">@order.OrderTime.ToString("dd/MM/yyyy HH:mm")</span>
                                    </div>

                                    <div class="mb-3">
                                        <strong><i class="fas fa-money-bill-wave"></i> Tổng tiền:</strong><br>
                                        <span class="h5 text-success">@order.TotalPrice.ToString("N0") VNĐ</span>
                                    </div>

                                    <div class="mb-3">
                                        <strong><i class="fas fa-info-circle"></i> Trạng thái đơn hàng:</strong><br>
                                        @if (order.IsCancel)
                                        {
                                            <span class="badge badge-danger" style="color: orangered;">
                                                <i class="fas fa-times-circle"></i> Đã hủy
                                            </span>

                                        }
                                        else
                                        {
                                            <span class="badge badge-success" style="color: green;">
                                                <i class="fas fa-check-circle"></i> Đang hoạt động
                                            </span>

                                        }
                                    </div>

                                    <div class="mb-3">
                                        <strong><i class="fas fa-credit-card"></i> Trạng thái thanh toán:</strong><br>
                                        @if (order.PaymentStatus != null && order.PaymentStatus.IsSuccess)
                                        {
                                            <span class="badge badge-success" style="color: green;">
                                                <i class="fas fa-check"></i> Đã thanh toán
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-warning" style="color: orangered;">
                                                <i class="fas fa-clock"></i> Chưa thanh toán
                                            </span>
                                        }
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="row">
                                        <div class="col-12 mb-2">
                                            <a href="@Url.Action("Details", "Order", new { cartId = order.CartId })"
                                               class="btn btn-primary btn-block">
                                                <i class="fas fa-eye"></i> Xem chi tiết
                                            </a>
                                        </div>
                                        @if (!order.IsCancel && (order.PaymentStatus == null || !order.PaymentStatus.IsSuccess))
                                        {
                                            <div class="col-12">
                                                <button type="button"
                                                        class="btn btn-success btn-block payment-btn"
                                                        onclick="handlePaymentClick(@order.CartId, @order.TotalPrice)">
                                                    <i class="fas fa-credit-card"></i> Thanh toán ngay
                                                </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-cart fa-5x text-muted mb-3"></i>
                    <h3 class="text-muted">Chưa có đơn hàng nào</h3>
                    <p class="text-muted">Bạn chưa có đơn hàng nào. Hãy bắt đầu mua sắm!</p>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-primary">
                        <i class="fas fa-shopping-cart"></i> Bắt đầu mua sắm
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Anti-forgery token for payment form -->
@Html.AntiForgeryToken()

<script>
    // Hàm xử lý khi click button thanh toán
    function handlePaymentClick(cartId, totalPrice) {
        // Tạo form ẩn để gửi dữ liệu đến trang thanh toán
        const form = document.createElement("form");
        form.method = "POST";
        form.action = "/Payment/Index";

        // Thêm các trường dữ liệu
        const amountInput = document.createElement("input");
        amountInput.type = "hidden";
        amountInput.name = "Amount";
        amountInput.value = totalPrice;
        form.appendChild(amountInput);

        const descriptionInput = document.createElement("input");
        descriptionInput.type = "hidden";
        descriptionInput.name = "Description";
        descriptionInput.value = `Thanh toán đơn hàng - Mã đơn #${cartId}`;
        form.appendChild(descriptionInput);

        const cartIdInput = document.createElement("input");
        cartIdInput.type = "hidden";
        cartIdInput.name = "CartId";
        cartIdInput.value = cartId;
        form.appendChild(cartIdInput);

        // Thêm anti-forgery token
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
        if (token) {
            const tokenInput = document.createElement("input");
            tokenInput.type = "hidden";
            tokenInput.name = "__RequestVerificationToken";
            tokenInput.value = token;
            form.appendChild(tokenInput);
        }

        document.body.appendChild(form);
        form.submit();
    }

    // Tự động refresh trang sau 5 phút để cập nhật trạng thái
    setTimeout(function() {
        location.reload();
    }, 300000);
</script>

<style>

    /* Styles cho thống kê */
    .statistics-card {
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        margin-bottom: 30px;
        border: none;
        overflow: hidden;
    }

        .statistics-card .card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px 15px 0 0;
            border: none;
            padding: 20px;
        }

            .statistics-card .card-header h5 {
                margin: 0;
                font-weight: 600;
                font-size: 1.3rem;
            }

            .statistics-card .card-header i {
                margin-right: 10px;
                font-size: 1.2rem;
            }

    .stat-item {
        padding: 25px 15px;
        border-radius: 12px;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        margin: 10px 5px;
        transition: all 0.4s ease;
        border: 1px solid #dee2e6;
        position: relative;
        overflow: hidden;
    }

        .stat-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .stat-item:hover::before {
            transform: scaleX(1);
        }

        .stat-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        }

    .stat-value {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 8px;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .stat-label {
        font-size: 0.95rem;
        color: #6c757d;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .stat-label i {
            margin-right: 8px;
            font-size: 1.1rem;
        }

    /* Màu sắc cho từng loại thống kê */
    .stat-item.total .stat-value {
        color: #3498db;
    }

    .stat-item.paid .stat-value {
        color: #27ae60;
    }

    .stat-item.unpaid .stat-value {
        color: #f39c12;
    }

    .stat-item.money .stat-value {
        color: #8e44ad;
    }
    .stat-item.paid-money .stat-value {
        color: #27ae60;
    }

    .stat-item.unpaid-money .stat-value {
        color: #e74c3c;
    }
    /* Responsive */
    @@media (max-width: 768px) {
        .stat-value {
            font-size: 2rem;
        }

        .stat-item {
            margin-bottom: 15px;
            padding: 20px 10px;
        }

        .statistics-card .card-header {
            padding: 15px;
        }
    }

    @@media (max-width: 576px) {
        .stat-value {
            font-size: 1.8rem;
        }
    }

    /* Animation khi load */
    .stat-item {
        animation: fadeInUp 0.6s ease forwards;
        opacity: 0;
        transform: translateY(20px);
    }

        .stat-item:nth-child(1) {
            animation-delay: 0.1s;
        }

        .stat-item:nth-child(2) {
            animation-delay: 0.2s;
        }

        .stat-item:nth-child(3) {
            animation-delay: 0.3s;
        }

        .stat-item:nth-child(4) {
            animation-delay: 0.4s;
        }

        .stat-item:nth-child(5) {
            animation-delay: 0.5s;
        }

        .stat-item:nth-child(6) {
            animation-delay: 0.6s;
        }

    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .payment-btn {
        transition: all 0.3s ease;
    }

        .payment-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
</style>