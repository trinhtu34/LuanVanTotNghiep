@using System.Globalization
@model List<testpayment6._0.ResponseModels.CartItem>
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <h2 class="text-center mb-4">Giỏ hàng của bạn</h2>

            @if (Model.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Món ăn</th>
                                        <th>Giá</th>
                                        <th>Số lượng</th>
                                        <th>Thành tiền</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr data-dish-id="@item.DishId">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.Image))
                                                    {
                                                        <img src="@item.Image" alt="@item.DishName"
                                                             class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                                    }
                                                    <div>
                                                        <h6 class="mb-0">@item.DishName</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="fw-bold">@item.Price.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) VNĐ</span>
                                            </td>
                                            <td class="align-middle">
                                                <div class="input-group" style="width: 120px;">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            type="button" data-action="decrease" data-dish-id="@item.DishId">
                                                        -
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm text-center quantity-input"
                                                           value="@item.Quantity" min="1" data-dish-id="@item.DishId">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            type="button" data-action="increase" data-dish-id="@item.DishId">
                                                        +
                                                    </button>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="fw-bold text-danger item-total">@($"{item.Total:N0}") VNĐ</span>
                                            </td>
                                            <td class="align-middle">
                                                <button class="btn btn-outline-danger btn-sm remove-btn"
                                                        data-dish-id="@item.DishId">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <hr>

                        <div class="row">
                            <div class="col-md-6">
                                <a href="@Url.Action("Index", "Menu")" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Tiếp tục mua sắm
                                </a>
                            </div>
                            <div class="col-md-6 text-end">
                                <h4>Tổng cộng: <span class="text-danger" id="totalAmount">@ViewBag.TotalAmount.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) VNĐ</span></h4>
                                <button class="btn btn-primary btn-lg mt-2" id="placeOrderBtn" type="button">
                                    <i class="fas fa-check"></i> Đặt mua
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                    <h4>Giỏ hàng trống</h4>
                    <p class="text-muted mb-4">Hãy thêm một số món ăn vào giỏ hàng của bạn</p>
                    <a href="@Url.Action("Index", "Menu")" class="btn btn-primary">
                        <i class="fas fa-utensils"></i> Xem thực đơn
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        if (typeof $ === 'undefined') {
            alert('jQuery chưa được load. Vui lòng kiểm tra lại!');
            return;
        }

        const userId = '@(ViewBag.UserId ?? "")';
        const isLoggedIn = @Html.Raw((ViewBag.IsLoggedIn ?? false).ToString().ToLower());

        // Utility functions
        const showMessage = (message) => alert(message);
        const updateUI = (selector, value) => $(selector).text(value);
        const toggleButton = (btn, disabled, html) => btn.prop('disabled', disabled).html(html);

        const updateCartBadge = (count) => {
            const badge = $('#cartBadge');
            count > 0 ? badge.text(count).show() : badge.hide();
        };

        const makeRequest = (url, data, successCallback, errorMessage = 'Có lỗi xảy ra') => {
            $.post(url, data)
                .done(successCallback)
                .fail(() => showMessage(errorMessage));
        };

        // Đặt hàng
         const placeOrder = () => {
            const btn = $('#placeOrderBtn');

            if (!isLoggedIn || userId === '') {
                showGuestInfoModal();
                return;
            }

            toggleButton(btn, true, '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');

            $.ajax({
                url: '@Url.Action("PlaceOrder", "Cart")',
                type: 'POST',
                dataType: 'json',
                timeout: 30000,
                success: (response) => {
                    if (response?.success) {
                        if (response.redirectToPayment && response.cartId && response.totalPrice) {
                            $('<form>', {
                                method: 'POST',
                                action: '@Url.Action("Index", "Payment")'
                            }).append(
                                $('<input>', { type: 'hidden', name: 'CartId', value: response.cartId }),
                                $('<input>', { type: 'hidden', name: 'Amount', value: response.totalPrice }),
                                $('<input>', { type: 'hidden', name: 'Description', value: `Thanh toán đơn hàng #${response.cartId}` })
                            ).appendTo('body').submit();
                        } else {
                            showMessage(response.message || 'Đặt hàng thành công!');
                            window.location.href = '@Url.Action("Index", "Menu")';
                        }
                    } else {
                        showMessage(response.message || 'Có lỗi xảy ra khi đặt hàng');
                        toggleButton(btn, false, '<i class="fas fa-check"></i> Đặt mua');
                    }
                },
                error: (xhr, status) => {
                    const errorMessages = {
                        0: 'Không thể kết nối đến server. Vui lòng kiểm tra kết nối mạng.',
                        404: 'Không tìm thấy API endpoint. Vui lòng liên hệ admin.',
                        500: 'Lỗi server. Vui lòng thử lại sau.',
                        timeout: 'Yêu cầu hết thời gian chờ. Vui lòng thử lại.'
                    };

                    showMessage(errorMessages[xhr.status] || errorMessages[status] || 'Có lỗi xảy ra khi đặt hàng');
                    toggleButton(btn, false, '<i class="fas fa-check"></i> Đặt mua');
                }
            });
        };
            const showGuestInfoModal = () => 
            {
                const modalHtml = `
                    <div class="modal fade" id="guestInfoModal" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Thông tin đặt hàng</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="guestInfoForm">
                                        <div class="mb-3">
                                            <label class="form-label">Họ và tên *</label>
                                            <input type="text" class="form-control" id="customerName" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Số điện thoại *</label>
                                            <input type="tel" class="form-control" id="phoneNumber" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Email *</label>
                                            <input type="email" class="form-control" id="email" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Địa chỉ *</label>
                                            <textarea class="form-control" id="address" rows="3" required></textarea>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                    <button type="button" class="btn btn-primary" id="confirmGuestOrder">Xác nhận đặt hàng</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                $('body').append(modalHtml);
                $('#guestInfoModal').modal('show');

                // Xử lý khi modal đóng
                $('#guestInfoModal').on('hidden.bs.modal', function() {
                    $(this).remove();
                });

                // Xử lý xác nhận đặt hàng
                $('#confirmGuestOrder').on('click', function() {
                    const form = $('#guestInfoForm')[0];
                    if (form.checkValidity()) {
                        const guestInfo = {
                            customerName: $('#customerName').val(),
                            phoneNumber: $('#phoneNumber').val(),
                            email: $('#email').val(),
                            address: $('#address').val()
                        };

                        $('#guestInfoModal').modal('hide');
                        placeGuestOrder(guestInfo);
                    } else {
                        form.reportValidity();
                    }
                });
        };
            // Thêm hàm đặt hàng cho guest
        const placeGuestOrder = (guestInfo) => {
            const btn = $('#placeOrderBtn');
            toggleButton(btn, true, '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');

            $.ajax({
                url: '@Url.Action("PlaceGuestOrder", "Cart")',
                type: 'POST',
                data: guestInfo,
                dataType: 'json',
                timeout: 30000,
                success: (response) => {
                    if (response?.success) {
                        if (response.redirectToPayment && response.cartId && response.totalPrice) {
                            $('<form>', {
                                method: 'POST',
                                action: '@Url.Action("Index", "Payment")'
                            }).append(
                                $('<input>', { type: 'hidden', name: 'CartId', value: response.cartId }),
                                $('<input>', { type: 'hidden', name: 'Amount', value: response.totalPrice }),
                                $('<input>', { type: 'hidden', name: 'Description', value: `Thanh toán đơn hàng #${response.cartId}` })
                            ).appendTo('body').submit();
                        } else {
                            showMessage(response.message || 'Đặt hàng thành công!');
                            window.location.href = '@Url.Action("Index", "Menu")';
                        }
                    } else {
                        showMessage(response.message || 'Có lỗi xảy ra khi đặt hàng');
                        toggleButton(btn, false, '<i class="fas fa-check"></i> Đặt mua');
                    }
                },
                error: (xhr, status) => {
                    const errorMessages = {
                        0: 'Không thể kết nối đến server. Vui lòng kiểm tra kết nối mạng.',
                        404: 'Không tìm thấy API endpoint. Vui lòng liên hệ admin.',
                        500: 'Lỗi server. Vui lòng thử lại sau.',
                        timeout: 'Yêu cầu hết thời gian chờ. Vui lòng thử lại.'
                    };

                    showMessage(errorMessages[xhr.status] || errorMessages[status] || 'Có lỗi xảy ra khi đặt hàng');
                    toggleButton(btn, false, '<i class="fas fa-check"></i> Đặt mua');
                }
            });
        };

        const updateQuantity = (dishId, quantity) => {
            makeRequest('@Url.Action("UpdateQuantity", "Cart")', { dishId, quantity }, (response) => {
                if (response.success) {
                    const row = $(`tr[data-dish-id="${dishId}"]`);
                    const price = parseFloat(row.find('.fw-bold').first().text().replace(/[^\d]/g, ''));
                    const itemTotal = price * quantity;

                    row.find('.item-total').text(itemTotal.toLocaleString() + ' VNĐ');
                    updateUI('#totalAmount', response.total.toLocaleString() + ' VNĐ');
                    updateCartBadge(response.cartCount);
                } else {
                    showMessage(response.message || 'Có lỗi xảy ra');
                }
            }, 'Có lỗi xảy ra khi cập nhật giỏ hàng');
        };

        const removeFromCart = (dishId) => {
            makeRequest('@Url.Action("RemoveFromCart", "Cart")', { dishId }, (response) => {
                if (response.success) {
                    $(`tr[data-dish-id="${dishId}"]`).fadeOut(300, function() {
                        $(this).remove();
                        response.cartCount === 0 ? location.reload() : updateUI('#totalAmount', response.total.toLocaleString() + ' VNĐ');
                    });
                    updateCartBadge(response.cartCount);
                } else {
                    showMessage(response.message || 'Có lỗi xảy ra');
                }
            }, 'Có lỗi xảy ra khi xóa món');
        };

        // Xử lý event đặt hàng ở đây
        $('#placeOrderBtn').on('click', function(e) {
            e.preventDefault();
            confirm('Xác nhận đặt hàng và chuyển đến trang thanh toán?') && placeOrder();
        });

        $('.quantity-btn').on('click', function() {
            const action = $(this).data('action');
            const dishId = $(this).data('dish-id');
            const input = $(`input[data-dish-id="${dishId}"]`);
            const currentValue = parseInt(input.val());

            let newValue = currentValue;
            if (action === 'increase') newValue++;
            else if (action === 'decrease' && currentValue > 1) newValue--;

            input.val(newValue);
            updateQuantity(dishId, newValue);
        });

        $('.quantity-input').on('change', function() {
            const dishId = $(this).data('dish-id');
            let quantity = parseInt($(this).val());

            if (quantity < 1) {
                quantity = 1;
                $(this).val(1);
            }

            updateQuantity(dishId, quantity);
        });

        $('.remove-btn').on('click', function() {
            const dishId = $(this).data('dish-id');
            confirm('Bạn có chắc muốn xóa món này khỏi giỏ hàng?') && removeFromCart(dishId);
        });
    });
</script>