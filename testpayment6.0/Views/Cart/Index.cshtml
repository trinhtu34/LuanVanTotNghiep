@using System.Globalization
@model List<testpayment6._0.ResponseModels.CartItem>
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <h2 class="text-center mb-4">Giỏ hàng của bạn</h2>

            @if (Model.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Món ăn</th>
                                        <th>Giá</th>
                                        <th>Số lượng</th>
                                        <th>Thành tiền</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr data-dish-id="@item.DishId">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.Image))
                                                    {
                                                        <img src="@item.Image" alt="@item.DishName"
                                                             class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                                    }
                                                    <div>
                                                        <h6 class="mb-0">@item.DishName</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="fw-bold">@item.Price.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) VNĐ</span>
                                            </td>
                                            <td class="align-middle">
                                                <div class="input-group" style="width: 120px;">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            type="button" data-action="decrease" data-dish-id="@item.DishId">
                                                        -
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm text-center quantity-input"
                                                           value="@item.Quantity" min="1" data-dish-id="@item.DishId">
                                                    <button class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            type="button" data-action="increase" data-dish-id="@item.DishId">
                                                        +
                                                    </button>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="fw-bold text-danger item-total">@($"{item.Total:N0}") VNĐ</span>
                                            </td>
                                            <td class="align-middle">
                                                <button class="btn btn-outline-danger btn-sm remove-btn"
                                                        data-dish-id="@item.DishId">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <hr>

                        <div class="row">
                            <div class="col-md-6">
                                <a href="@Url.Action("Index", "Menu")" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Tiếp tục mua sắm
                                </a>
                            </div>
                            <div class="col-md-6 text-end">
                                <h4>Tổng cộng: <span class="text-danger" id="totalAmount">@ViewBag.TotalAmount.ToString("N0", System.Globalization.CultureInfo.InvariantCulture) VNĐ</span></h4>
                                <button class="btn btn-primary btn-lg mt-2" id="placeOrderBtn" type="button">
                                    <i class="fas fa-check"></i> Đặt mua
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                    <h4>Giỏ hàng trống</h4>
                    <p class="text-muted mb-4">Hãy thêm một số món ăn vào giỏ hàng của bạn</p>
                    <a href="@Url.Action("Index", "Menu")" class="btn btn-primary">
                        <i class="fas fa-utensils"></i> Xem thực đơn
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        console.log('Document ready - Cart page loaded');

        // Kiểm tra jQuery có load không
        if (typeof $ === 'undefined') {
            console.error('jQuery is not loaded!');
            alert('jQuery chưa được load. Vui lòng kiểm tra lại!');
            return;
        }

        // Lấy thông tin user từ server
        var userId = '@(ViewBag.UserId ?? "")';
        var isLoggedIn = @Html.Raw((ViewBag.IsLoggedIn ?? false).ToString().ToLower());

        console.log('User ID:', userId);
        console.log('Is logged in:', isLoggedIn);

        // Xử lý nút đặt mua
        $('#placeOrderBtn').off('click').on('click', function(e) {
            e.preventDefault();
            console.log('=== PLACE ORDER BUTTON CLICKED ===');

            // Kiểm tra đăng nhập
            if (!isLoggedIn || userId === '') {
                alert('Vui lòng đăng nhập trước khi đặt hàng');
                return;
            }

            if (confirm('Xác nhận đặt hàng và chuyển đến trang thanh toán?')) {
                console.log('User confirmed order - calling placeOrder()');
                placeOrder();
            } else {
                console.log('User cancelled order');
            }
        });

        // Function đặt hàng
        function placeOrder() {
            console.log('=== PLACE ORDER FUNCTION STARTED ===');

            var btn = $('#placeOrderBtn');

            // Disable button
            btn.prop('disabled', true);
            btn.html('<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');

            $.ajax({
                url: '@Url.Action("PlaceOrder", "Cart")',
                type: 'POST',
                dataType: 'json',
                timeout: 30000,
                beforeSend: function() {
                    console.log('AJAX request starting...');
                },
                success: function(response) {
                    console.log('=== AJAX SUCCESS ===');
                    console.log('Response:', response);

                    if (response && response.success) {
                        console.log('Order placed successfully');

                        // Kiểm tra xem có cần redirect đến thanh toán không
                        if (response.redirectToPayment && response.cartId && response.totalPrice) {
                            console.log('Redirecting to payment with CartId:', response.cartId, 'TotalPrice:', response.totalPrice);

                            // Tạo form ẩn để gửi dữ liệu sang trang thanh toán
                            var form = $('<form>', {
                                method: 'POST',
                                action: '@Url.Action("Index", "Payment")'
                            });

                            // Thêm các input ẩn
                            form.append($('<input>', {
                                type: 'hidden',
                                name: 'CartId',
                                value: response.cartId
                            }));

                            form.append($('<input>', {
                                type: 'hidden',
                                name: 'Amount',
                                value: response.totalPrice
                            }));

                            form.append($('<input>', {
                                type: 'hidden',
                                name: 'Description',
                                value: 'Thanh toán đơn hàng #' + response.cartId
                            }));

                            // Append form to body và submit
                            $('body').append(form);
                            form.submit();
                        } else {
                            // Fallback: redirect về menu nếu không có thông tin thanh toán
                            alert(response.message || 'Đặt hàng thành công!');
                            window.location.href = '@Url.Action("Index", "Menu")';
                        }
                    } else {
                        console.error('Order failed:', response);
                        alert(response.message || 'Có lỗi xảy ra khi đặt hàng');

                        // Re-enable button
                        btn.prop('disabled', false);
                        btn.html('<i class="fas fa-check"></i> Đặt mua');
                    }
                },
                error: function(xhr, status, error) {
                    console.log('=== AJAX ERROR ===');
                    console.error('XHR:', xhr);
                    console.error('Status:', status);
                    console.error('Error:', error);
                    console.error('Response Text:', xhr.responseText);

                    var errorMessage = 'Có lỗi xảy ra khi đặt hàng';

                    if (xhr.status === 0) {
                        errorMessage = 'Không thể kết nối đến server. Vui lòng kiểm tra kết nối mạng.';
                    } else if (xhr.status === 404) {
                        errorMessage = 'Không tìm thấy API endpoint. Vui lòng liên hệ admin.';
                    } else if (xhr.status === 500) {
                        errorMessage = 'Lỗi server. Vui lòng thử lại sau.';
                    } else if (status === 'timeout') {
                        errorMessage = 'Yêu cầu hết thời gian chờ. Vui lòng thử lại.';
                    }

                    alert(errorMessage);

                    // Re-enable button
                    btn.prop('disabled', false);
                    btn.html('<i class="fas fa-check"></i> Đặt mua');
                }
            });
        }

        // Xử lý thay đổi số lượng
        $('.quantity-btn').off('click').on('click', function() {
            var action = $(this).data('action');
            var dishId = $(this).data('dish-id');
            var input = $(`input[data-dish-id="${dishId}"]`);
            var currentValue = parseInt(input.val());

            if (action === 'increase') {
                input.val(currentValue + 1);
            } else if (action === 'decrease' && currentValue > 1) {
                input.val(currentValue - 1);
            }

            updateQuantity(dishId, parseInt(input.val()));
        });

        // Xử lý khi thay đổi trực tiếp input
        $('.quantity-input').off('change').on('change', function() {
            var dishId = $(this).data('dish-id');
            var quantity = parseInt($(this).val());

            if (quantity < 1) {
                $(this).val(1);
                quantity = 1;
            }

            updateQuantity(dishId, quantity);
        });

        // Xử lý xóa món
        $('.remove-btn').off('click').on('click', function() {
            var dishId = $(this).data('dish-id');

            if (confirm('Bạn có chắc muốn xóa món này khỏi giỏ hàng?')) {
                removeFromCart(dishId);
            }
        });

        function updateQuantity(dishId, quantity) {
            $.post('@Url.Action("UpdateQuantity", "Cart")', {
                dishId: dishId,
                quantity: quantity
            }, function(response) {
                if (response.success) {
                    // Cập nhật UI
                    var row = $(`tr[data-dish-id="${dishId}"]`);
                    var price = parseFloat(row.find('.fw-bold').first().text().replace(/[^\d]/g, ''));
                    var itemTotal = price * quantity;

                    row.find('.item-total').text(itemTotal.toLocaleString() + ' VNĐ');
                    $('#totalAmount').text(response.total.toLocaleString() + ' VNĐ');
                    updateCartBadge(response.cartCount);
                } else {
                    alert(response.message || 'Có lỗi xảy ra');
                }
            }).fail(function() {
                alert('Có lỗi xảy ra khi cập nhật giỏ hàng');
            });
        }

        function removeFromCart(dishId) {
            $.post('@Url.Action("RemoveFromCart", "Cart")', {
                dishId: dishId
            }, function(response) {
                if (response.success) {
                    $(`tr[data-dish-id="${dishId}"]`).fadeOut(300, function() {
                        $(this).remove();

                        // Kiểm tra nếu giỏ hàng trống thì reload trang
                        if (response.cartCount === 0) {
                            location.reload();
                        } else {
                            $('#totalAmount').text(response.total.toLocaleString() + ' VNĐ');
                        }
                    });
                    updateCartBadge(response.cartCount);
                } else {
                    alert(response.message || 'Có lỗi xảy ra');
                }
            }).fail(function() {
                alert('Có lỗi xảy ra khi xóa món');
            });
        }

        function updateCartBadge(count) {
            var badge = $('#cartBadge');
            if (badge.length > 0) {
                if (count > 0) {
                    badge.text(count).show();
                } else {
                    badge.hide();
                }
            }
        }
    });
</script>